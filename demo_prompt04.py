#!/usr/bin/env python3
# -*- coding utf-8 -*-

import os
import re
from statistics import mode
from typing import Dict, List
from langchain.llms import Replicate
from langchain.memory import ChatMessageHistory
from langchain.schema.messages import get_buffer_string

'''
# 使用搜索引擎，对答案进行优化
pip install llama-index langchain
# 获取授权： https://replicate.com/account/api-tokens

使用Program-aided Language Models(PAL)技术，提升计算能力
'''

LLAMA2_70B_CHAT = "meta/llama-2-70b-chat:2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48"
LLAMA2_13B_CHAT = "meta/llama-2-13b-chat:f4e2de70d66816a838a89eeeb621910adffb0dd0baba3976c96980970978018d"
LLAMA2_34B_CDODE = "meta/codellama-34b:67942fd0f55b66da802218a19a8f0e1d73095473674061a6ea19f2dc8c053152"
os.environ["REPLICATE_API_TOKEN"] = "YOUR_KEY_HERE"

def create_llm(
    model: str = LLAMA2_34B_CDODE,
    temperature: float = 0.6,
    top_p: float = 0.9,):
    llm = Replicate(
            model=model,
            model_kwargs={"temperature": temperature,"top_p": top_p, "max_new_tokens": 1000}
        )
    return llm

def assistant(content: str):
    return { "role": "assistant", "content": content }

def user(content: str):
    return { "role": "user", "content": content }

def chat_completion(
    llm: Replicate,
    messages: List[Dict],
) -> str:
    history = ChatMessageHistory()
    for message in messages:
        if message["role"] == "user":
            history.add_user_message(message["content"])
        elif message["role"] == "assistant":
            history.add_ai_message(message["content"])
        else:
            raise Exception("Unknown role")
    return llm(
        get_buffer_string(
            history.messages,
            human_prefix="USER",
            ai_prefix="ASSISTANT",
        ),
    )

def complete_and_print(llm: Replicate, prompt: str):
    print(f'==============\n{prompt}\n==============')
    response = llm(prompt)
    print(response, end='\n\n')

def gen_answer():
    response = llm(
        "John found that the average of 15 numbers is 40."
        "If 10 is added to each number then the mean of the numbers is?"
        "Report the answer surrounded by three backticks, for example: ```123```"
    )
    match = re.search(r'```(\d+)```', response)
    if match is None:
        return None
    return match.group(1)

if __name__ == "__main__":
    llm=create_llm()

    # 大模型数学能力较差
    complete_and_print(
        llm,
        """
        Calculate the answer to the following math problem:

        ((-5 + 93 * 4 - 0) * (4^4 + -7 + 0 * 5))
        """)
    # Gives incorrect answers like 92448, 92648, 95463
    
    # 通过Program-aided Language Models(PAL)技术，提升计算能力
    complete_and_print(
        llm,
        """
        # Python code to calculate: ((-5 + 93 * 4 - 0) * (4^4 + -7 + 0 * 5))
        """
    )

    '''
    # The following code was generated by Code Llama 34B:
    num1 = (-5 + 93 * 4 - 0)
    num2 = (4**4 + -7 + 0 * 5)
    answer = num1 * num2
    print(answer)
    '''